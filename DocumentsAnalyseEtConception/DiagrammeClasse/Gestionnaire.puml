@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": ""
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": true,
    "cutInterfaceStructures": true,
    "cutDataStructures": true,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false // root node is included
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "eu.telecomnancy.javafx.ConnectToDb.Connect"
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1529275494 { 
   	label=telecomnancy
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1577443144 { 
   	label=javafx
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   Connect68344481[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Connect</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   connection: Connection [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gc: GestionnaireCreneau [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ge: GestionnaireEleve [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gp: GestionnaireProf [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gpl: GestionnairePlanning [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gr: GestionnaireRdv [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   gre: GestionnaireRdvEleve [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   jdbcUrl: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   statement: Statement [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ changeEleve(eleve: Eleve)</TD></TR>
<TR><TD ALIGN="LEFT" >+ changeProf(prof: Professeur)</TD></TR>
<TR><TD ALIGN="LEFT" >+ changeRdv(rdv: RendezVous)</TD></TR>
<TR><TD ALIGN="LEFT" >+ changeRdvStatut(rdv: RendezVous)</TD></TR>
<TR><TD ALIGN="LEFT" >- copyFile(sourceFile: File, destFile: File)</TD></TR>
<TR><TD ALIGN="LEFT" >+ initDB(connection: Connection, statement: Statement)</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertPlanning(c: Creneau, p: Professeur)</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertProfesseur(p: Professeur)</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertRdv(rdv: RendezVous)</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertRdvEleve(rdveleve: RendezVousEleve)</TD></TR>
<TR><TD ALIGN="LEFT" >+ load_db()</TD></TR>
<TR><TD ALIGN="LEFT" >+ printTable(h: Hashtable)</TD></TR>
<TR><TD ALIGN="LEFT" >+ quote(string: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ rsetToCreneau(connection: Connection, statement: Statement)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rsetToEleve(connection: Connection, statement: Statement)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rsetToPlanning(connection: Connection, statement: Statement)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rsetToProf(connection: Connection, statement: Statement)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rsetToRdv(connection: Connection, statement: Statement)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rsetToRdvEleve(connection: Connection, statement: Statement)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Creneau1960557152[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Creneau</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   heure: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id_creneau: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   jour: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GestionnaireCreneau373855716[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GestionnaireCreneau</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   connect: Connect [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   table_creneau: Hashtable&lt;Integer, Creneau&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findCreneau(jour: String, heure: String): Creneau</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GestionnaireEleve373855716[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GestionnaireEleve</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   connect: Connect [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   max_id_eleve: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   table_eleve: Hashtable&lt;Integer, Eleve&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ containsNomMdp(nom: String, mdp: String): Eleve</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GestionnairePlanning373855716[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GestionnairePlanning</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   connect: Connect [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   table_planning: ArrayList&lt;Planning&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addPlaning(p: Professeur, c: Creneau)</TD></TR>
<TR><TD ALIGN="LEFT" >+ estDispo(p: Professeur, c: Creneau): Boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GestionnaireProf373855716[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GestionnaireProf</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   connect: Connect [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   max_id_prof: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   table_prof: Hashtable&lt;Integer, Professeur&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addProfesseur(mdp: String, nom: String, prenom: String, email: String, tel: String, adresse: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ containsNomMdp(nom: String, mdp: String): Professeur</TD></TR>
<TR><TD ALIGN="LEFT" >+ findProf(nom: String, prenom: String): Professeur</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GestionnaireRdv373855716[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GestionnaireRdv</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   connect: Connect [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   max_id_rdv: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   table_rdv: Hashtable&lt;Integer, RendezVous&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRdv(p: Professeur, eleves: ArrayList&lt;Eleve&gt;, c: Creneau, lieu: String, descr: String, intitule: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ annuleRDV(rdv: RendezVous)</TD></TR>
<TR><TD ALIGN="LEFT" >+ archiveRDV(rdv: RendezVous)</TD></TR>
<TR><TD ALIGN="LEFT" >+ changeRdv(rdv: RendezVous, p: Professeur, eleves: ArrayList&lt;Eleve&gt;, c: Creneau, lieu: String, descr: String, intitule: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ confirmeRDV(rdv: RendezVous)</TD></TR>
<TR><TD ALIGN="LEFT" >+ rdvToString(rdv: RendezVous, e: Eleve, c: Creneau): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ rdvToString(rdv: RendezVous, p: Professeur, c: Creneau): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GestionnaireRdvEleve373855716[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GestionnaireRdvEleve</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   connect: Connect [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   table_rdvEleve: ArrayList&lt;RendezVousEleve&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addRdvEleve(rdv: RendezVous)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MyRdv1390915909[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MyRdv</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   Accueil_mdp: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   Accueil_nom: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   Rdv_archive: ArrayList&lt;RendezVous&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   Rdv_confirme: ArrayList&lt;RendezVous&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   Rdv_en_attente: ArrayList&lt;RendezVous&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   connect: Connect [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   eleve: Eleve [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   erreur: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   prof: Professeur [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   stage: Stage [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afficheRDV(compte: String, etat: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ check_id(nom: String, mdp: String): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ clearRDV(etat: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllRdv(prof: Professeur, etat: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAllRdv(eleve: Eleve, etat: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ updatestatus(rdv: RendezVous, etat: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Planning117292252[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Planning</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   id_creneau: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id_enseignant: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Professeur117292252[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Professeur</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   id_professeur: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RendezVous1960557152[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RendezVous</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   descr: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   etat: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id_creneau: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id_prof: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id_rdv: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   intitule: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lieu: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   liste_eleve: ArrayList&lt;Eleve&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rdvstate: RdvState [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ annule()</TD></TR>
<TR><TD ALIGN="LEFT" >+ archive()</TD></TR>
<TR><TD ALIGN="LEFT" >+ confirme()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RendezVousEleve1960557152[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RendezVousEleve</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   id_eleve: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id_rdv: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Eleve117292252[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Eleve</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   id_eleve: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
}

'edges    
Connect68344481 -> GestionnaireCreneau373855716[label="gc
[0..1]"];
Connect68344481 -> GestionnaireEleve373855716[label="ge
[0..1]"];
Connect68344481 -> GestionnairePlanning373855716[label="gpl
[0..1]"];
Connect68344481 -> GestionnaireProf373855716[label="gp
[0..1]"];
Connect68344481 -> GestionnaireRdv373855716[label="gr
[0..1]"];
Connect68344481 -> GestionnaireRdvEleve373855716[label="gre
[0..1]"];
GestionnaireCreneau373855716 -> Connect68344481[label="connect
[0..1]"];
GestionnaireEleve373855716 -> Connect68344481[label="connect
[0..1]"];
GestionnairePlanning373855716 -> Connect68344481[label="connect
[0..1]"];
GestionnaireProf373855716 -> Connect68344481[label="connect
[0..1]"];
GestionnaireRdv373855716 -> Connect68344481[label="connect
[0..1]"];
GestionnaireRdvEleve373855716 -> Connect68344481[label="connect
[0..1]"];
GestionnaireCreneau373855716 -> Creneau1960557152[label="table_creneau
[0..*]"];
GestionnaireEleve373855716 -> Eleve117292252[label="table_eleve
[0..*]"];
GestionnairePlanning373855716 -> Planning117292252[label="table_planning
[0..*]"];
GestionnaireProf373855716 -> Professeur117292252[label="table_prof
[0..*]"];
GestionnaireRdv373855716 -> RendezVous1960557152[label="table_rdv
[0..*]"];
GestionnaireRdvEleve373855716 -> RendezVousEleve1960557152[label="table_rdvEleve
[0..*]"];
MyRdv1390915909 -> Connect68344481[label="connect
[0..1]"];
    
}
@enduml